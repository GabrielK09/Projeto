{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = process.env.VUE_APP_API_BASE_URL;\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\nexport default {\n  async login(user) {\n    var response = await axios.post(API_URL + '/login', {\n      email: user.email,\n      password: user.password\n    }, {\n      headers: {\n        Accept: \"application/vnd.api+json\",\n        \"Content-Type\": \"application/vnd.api+json\"\n      }\n    });\n    if (response.data.access_token) {\n      localStorage.setItem('user_free', JSON.stringify(response.data.access_token));\n    }\n    return response.data;\n  },\n  async logout() {\n    await axios.post(API_URL + \"/logout\", {}, {\n      headers: authHeader()\n    });\n    localStorage.removeItem('user_free');\n  },\n  async register(user) {\n    var response = await axios.post(API_URL + '/register', {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      password_confirmation: user.confirmPassword\n    });\n    if (response.data.access_token) {\n      localStorage.setItem('user_free', JSON.stringify(response.data.access_token));\n    }\n    return response.data;\n  },\n  async passwordForgot(userEmail) {\n    var response = await axios.post(API_URL + '/password-forgot', {\n      redirect_url: BASE_URL + \"/password-reset\",\n      email: userEmail\n    });\n    return response.status;\n  },\n  async passwordReset(passwordDTO) {\n    var response = await axios.post(API_URL + '/password-reset', {\n      password: passwordDTO.newPassword,\n      password_confirmation: passwordDTO.confirmPassword,\n      email: passwordDTO.email,\n      token: passwordDTO.token\n    });\n    return response.status;\n  }\n};","map":{"version":3,"names":["axios","authHeader","API_URL","process","env","VUE_APP_API_BASE_URL","BASE_URL","VUE_APP_BASE_URL","login","user","response","post","email","password","headers","Accept","data","access_token","localStorage","setItem","JSON","stringify","logout","removeItem","register","name","password_confirmation","confirmPassword","passwordForgot","userEmail","redirect_url","status","passwordReset","passwordDTO","newPassword","token"],"sources":["C:/Gabriel/Codes/SGMW/delivery_app_frontend/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = process.env.VUE_APP_API_BASE_URL\r\nconst BASE_URL = process.env.VUE_APP_BASE_URL\r\n\r\nexport default {\r\n\r\n  async login(user) {\r\n    var response = await axios.post(API_URL + '/login', {\r\n      email: user.email,\r\n      password: user.password\r\n    }, \r\n    {\r\n      headers: {\r\n        Accept: \"application/vnd.api+json\",\r\n        \"Content-Type\": \"application/vnd.api+json\",\r\n      }\r\n    });\r\n    if (response.data.access_token) {\r\n      localStorage.setItem('user_free', JSON.stringify(response.data.access_token));\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  async logout() {\r\n    await axios.post(API_URL + \"/logout\", {}, { headers: authHeader() })\r\n    localStorage.removeItem('user_free');\r\n  },\r\n\r\n  async register(user) {\r\n    var response = await axios.post(API_URL + '/register', {\r\n      name: user.name,\r\n      email: user.email,\r\n      password: user.password,\r\n      password_confirmation: user.confirmPassword\r\n    });\r\n    if (response.data.access_token) {\r\n      localStorage.setItem('user_free', JSON.stringify(response.data.access_token));\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  async passwordForgot(userEmail) {\r\n\r\n    var response = await axios.post(API_URL + '/password-forgot', {\r\n      redirect_url: BASE_URL + \"/password-reset\",\r\n      email: userEmail\r\n    })\r\n    return response.status;\r\n  },\r\n\r\n  async passwordReset(passwordDTO) {\r\n\r\n    var response = await axios.post(API_URL + '/password-reset', {\r\n      password: passwordDTO.newPassword,\r\n      password_confirmation: passwordDTO.confirmPassword,\r\n      email: passwordDTO.email,\r\n      token: passwordDTO.token\r\n    })\r\n    return response.status;\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAChD,MAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAG,CAACG,gBAAgB;AAE7C,eAAe;EAEb,MAAMC,KAAKA,CAACC,IAAI,EAAE;IAChB,IAAIC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAACT,OAAO,GAAG,QAAQ,EAAE;MAClDU,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,QAAQ,EAAEJ,IAAI,CAACI;IACjB,CAAC,EACD;MACEC,OAAO,EAAE;QACPC,MAAM,EAAE,0BAA0B;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAIL,QAAQ,CAACM,IAAI,CAACC,YAAY,EAAE;MAC9BC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAACM,IAAI,CAACC,YAAY,CAAC,CAAC;IAC/E;IACA,OAAOP,QAAQ,CAACM,IAAI;EACtB,CAAC;EAED,MAAMM,MAAMA,CAAA,EAAG;IACb,MAAMtB,KAAK,CAACW,IAAI,CAACT,OAAO,GAAG,SAAS,EAAE,CAAC,CAAC,EAAE;MAAEY,OAAO,EAAEb,UAAU,CAAC;IAAE,CAAC,CAAC;IACpEiB,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;EACtC,CAAC;EAED,MAAMC,QAAQA,CAACf,IAAI,EAAE;IACnB,IAAIC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAACT,OAAO,GAAG,WAAW,EAAE;MACrDuB,IAAI,EAAEhB,IAAI,CAACgB,IAAI;MACfb,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;MACvBa,qBAAqB,EAAEjB,IAAI,CAACkB;IAC9B,CAAC,CAAC;IACF,IAAIjB,QAAQ,CAACM,IAAI,CAACC,YAAY,EAAE;MAC9BC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAACM,IAAI,CAACC,YAAY,CAAC,CAAC;IAC/E;IACA,OAAOP,QAAQ,CAACM,IAAI;EACtB,CAAC;EAED,MAAMY,cAAcA,CAACC,SAAS,EAAE;IAE9B,IAAInB,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAACT,OAAO,GAAG,kBAAkB,EAAE;MAC5D4B,YAAY,EAAExB,QAAQ,GAAG,iBAAiB;MAC1CM,KAAK,EAAEiB;IACT,CAAC,CAAC;IACF,OAAOnB,QAAQ,CAACqB,MAAM;EACxB,CAAC;EAED,MAAMC,aAAaA,CAACC,WAAW,EAAE;IAE/B,IAAIvB,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAACT,OAAO,GAAG,iBAAiB,EAAE;MAC3DW,QAAQ,EAAEoB,WAAW,CAACC,WAAW;MACjCR,qBAAqB,EAAEO,WAAW,CAACN,eAAe;MAClDf,KAAK,EAAEqB,WAAW,CAACrB,KAAK;MACxBuB,KAAK,EAAEF,WAAW,CAACE;IACrB,CAAC,CAAC;IACF,OAAOzB,QAAQ,CAACqB,MAAM;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}