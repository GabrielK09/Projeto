{"ast":null,"code":"import MaterialButton from \"@/components/MaterialButton.vue\";\nimport MaterialInputField from \"@/components/MaterialInputField.vue\";\nimport showSwal from \"@/mixins/showSwal\";\nimport { mapMutations } from \"vuex\";\nconst body = document.getElementsByTagName(\"body\")[0];\nimport { Form } from \"vee-validate\";\nimport { useRoute } from \"vue-router\";\nimport * as Yup from \"yup\";\nexport default {\n  name: \"Password Reset\",\n  components: {\n    MaterialInputField,\n    MaterialButton,\n    Form\n  },\n  data() {\n    return {\n      passwordDTO: {},\n      schema: Yup.object().shape({\n        newPassword: Yup.string().required(\"Password is a required input\").min(8, \"Password must have at least 8 characters\"),\n        confirmPassword: Yup.string().required(\"Confirm password is a required input\").oneOf([Yup.ref(\"newPassword\")], \"Your passwords do not match.\")\n      })\n    };\n  },\n  setup() {\n    const route = useRoute();\n    const query = route.query;\n    return {\n      query\n    };\n  },\n  beforeMount() {\n    this.toggleEveryDisplay();\n    this.toggleHideConfig();\n    body.classList.remove(\"bg-gray-100\");\n  },\n  beforeUnmount() {\n    this.toggleEveryDisplay();\n    this.toggleHideConfig();\n    body.classList.add(\"bg-gray-100\");\n  },\n  methods: {\n    ...mapMutations([\"toggleEveryDisplay\", \"toggleHideConfig\"]),\n    async handleReset() {\n      this.passwordDTO.email = this.query.email;\n      this.passwordDTO.token = this.query.token;\n      try {\n        await this.$store.dispatch(\"auth/passwordReset\", this.passwordDTO);\n        showSwal.methods.showSwal({\n          type: \"success\",\n          message: `Password Changed!`,\n          width: 500\n        });\n      } catch (error) {\n        showSwal.methods.showSwal({\n          type: \"error\",\n          message: \"Oops, something went wrong!\",\n          width: 500\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["MaterialButton","MaterialInputField","showSwal","mapMutations","body","document","getElementsByTagName","Form","useRoute","Yup","name","components","data","passwordDTO","schema","object","shape","newPassword","string","required","min","confirmPassword","oneOf","ref","setup","route","query","beforeMount","toggleEveryDisplay","toggleHideConfig","classList","remove","beforeUnmount","add","methods","handleReset","email","token","$store","dispatch","type","message","width","error"],"sources":["C:\\Gabriel\\Codes\\SGMW\\delivery_app_frontend\\frontend\\src\\views\\examples-api\\PasswordReset.vue"],"sourcesContent":["<template>\r\n  <main class=\"mt-0 main-content\">\r\n    <div\r\n      class=\"page-header align-items-start min-vh-50 m-3 border-radius-lg\"\r\n      style=\"\r\n        background-image: url('https://images.unsplash.com/photo-1497996541515-6549b145cd90?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80');\r\n      \"\r\n    >\r\n      <span class=\"mask bg-gradient-dark opacity-6\"></span>\r\n    </div>\r\n    <section>\r\n      <div class=\"container mb-4\">\r\n        <div class=\"row mt-lg-n12 mt-md-n12 mt-n12 justify-content-center\">\r\n          <div class=\"col-xl-4 col-lg-5 col-md-7 mx-auto\">\r\n            <div class=\"card mt-8\">\r\n              <div\r\n                class=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\"\r\n              >\r\n                <div\r\n                  class=\"bg-gradient-warning shadow-warning border-radius-lg py-3 pe-1 text-center py-4\"\r\n                >\r\n                  <h3 class=\"font-weight-bolder text-white\">Reset Password</h3>\r\n                </div>\r\n              </div>\r\n              <div class=\"py-4 card-body\">\r\n                <Form\r\n                  role=\"form\"\r\n                  :validation-schema=\"schema\"\r\n                  @submit=\"handleReset\"\r\n                >\r\n                  <div class=\"mb-3\">\r\n                    <material-input-field\r\n                      id=\"newPassword\"\r\n                      v-model:value=\"passwordDTO.newPassword\"\r\n                      type=\"password\"\r\n                      label=\"New Password\"\r\n                      name=\"newPassword\"\r\n                      variant=\"static\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <material-input-field\r\n                      id=\"confirmPassword\"\r\n                      v-model:value=\"passwordDTO.confirmPassword\"\r\n                      type=\"password\"\r\n                      label=\"Confirm Password\"\r\n                      name=\"confirmPassword\"\r\n                      variant=\"static\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"text-center\">\r\n                    <material-button\r\n                      class=\"mt-4\"\r\n                      variant=\"gradient\"\r\n                      color=\"warning\"\r\n                      full-width\r\n                      >Reset</material-button\r\n                    >\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport MaterialButton from \"@/components/MaterialButton.vue\";\r\nimport MaterialInputField from \"@/components/MaterialInputField.vue\";\r\nimport showSwal from \"@/mixins/showSwal\";\r\nimport { mapMutations } from \"vuex\";\r\nconst body = document.getElementsByTagName(\"body\")[0];\r\n\r\nimport { Form } from \"vee-validate\";\r\nimport { useRoute } from \"vue-router\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default {\r\n  name: \"Password Reset\",\r\n  components: {\r\n    MaterialInputField,\r\n    MaterialButton,\r\n    Form,\r\n  },\r\n  data() {\r\n    return {\r\n      passwordDTO: {},\r\n      schema: Yup.object().shape({\r\n        newPassword: Yup.string()\r\n          .required(\"Password is a required input\")\r\n          .min(8, \"Password must have at least 8 characters\"),\r\n        confirmPassword: Yup.string()\r\n          .required(\"Confirm password is a required input\")\r\n          .oneOf([Yup.ref(\"newPassword\")], \"Your passwords do not match.\"),\r\n      }),\r\n    };\r\n  },\r\n  setup() {\r\n    const route = useRoute();\r\n    const query = route.query;\r\n    return { query };\r\n  },\r\n  beforeMount() {\r\n    this.toggleEveryDisplay();\r\n    this.toggleHideConfig();\r\n    body.classList.remove(\"bg-gray-100\");\r\n  },\r\n  beforeUnmount() {\r\n    this.toggleEveryDisplay();\r\n    this.toggleHideConfig();\r\n    body.classList.add(\"bg-gray-100\");\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"toggleEveryDisplay\", \"toggleHideConfig\"]),\r\n    async handleReset() {\r\n      this.passwordDTO.email = this.query.email;\r\n      this.passwordDTO.token = this.query.token;\r\n      try {\r\n        await this.$store.dispatch(\"auth/passwordReset\", this.passwordDTO);\r\n        showSwal.methods.showSwal({\r\n          type: \"success\",\r\n          message: `Password Changed!`,\r\n          width: 500,\r\n        });\r\n      } catch (error) {\r\n        showSwal.methods.showSwal({\r\n          type: \"error\",\r\n          message: \"Oops, something went wrong!\",\r\n          width: 500,\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAsEA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,kBAAiB,MAAO,qCAAqC;AACpE,OAAOC,QAAO,MAAO,mBAAmB;AACxC,SAASC,YAAW,QAAS,MAAM;AACnC,MAAMC,IAAG,GAAIC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAErD,SAASC,IAAG,QAAS,cAAc;AACnC,SAASC,QAAO,QAAS,YAAY;AACrC,OAAO,KAAKC,GAAE,MAAO,KAAK;AAE1B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVV,kBAAkB;IAClBD,cAAc;IACdO;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MACfC,MAAM,EAAEL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;QACzBC,WAAW,EAAER,GAAG,CAACS,MAAM,CAAC,EACrBC,QAAQ,CAAC,8BAA8B,EACvCC,GAAG,CAAC,CAAC,EAAE,0CAA0C,CAAC;QACrDC,eAAe,EAAEZ,GAAG,CAACS,MAAM,CAAC,EACzBC,QAAQ,CAAC,sCAAsC,EAC/CG,KAAK,CAAC,CAACb,GAAG,CAACc,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,8BAA8B;MACnE,CAAC;IACH,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIjB,QAAQ,CAAC,CAAC;IACxB,MAAMkB,KAAI,GAAID,KAAK,CAACC,KAAK;IACzB,OAAO;MAAEA;IAAM,CAAC;EAClB,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvBzB,IAAI,CAAC0B,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;EACtC,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,CAACJ,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvBzB,IAAI,CAAC0B,SAAS,CAACG,GAAG,CAAC,aAAa,CAAC;EACnC,CAAC;EACDC,OAAO,EAAE;IACP,GAAG/B,YAAY,CAAC,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;IAC3D,MAAMgC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACtB,WAAW,CAACuB,KAAI,GAAI,IAAI,CAACV,KAAK,CAACU,KAAK;MACzC,IAAI,CAACvB,WAAW,CAACwB,KAAI,GAAI,IAAI,CAACX,KAAK,CAACW,KAAK;MACzC,IAAI;QACF,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,oBAAoB,EAAE,IAAI,CAAC1B,WAAW,CAAC;QAClEX,QAAQ,CAACgC,OAAO,CAAChC,QAAQ,CAAC;UACxBsC,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,mBAAmB;UAC5BC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACdzC,QAAQ,CAACgC,OAAO,CAAChC,QAAQ,CAAC;UACxBsC,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE,6BAA6B;UACtCC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}