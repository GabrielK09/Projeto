{"ast":null,"code":"import { mapState } from \"vuex\";\nexport default {\n  name: \"SidenavCollapse\",\n  props: {\n    collapseRef: {\n      type: String,\n      required: true\n    },\n    navText: {\n      type: String,\n      required: true\n    },\n    collapse: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      isExpanded: false\n    };\n  },\n  methods: {\n    getRoute() {\n      const routeArr = this.$route.path.split(\"/\");\n      return routeArr[1];\n    }\n  },\n  computed: {\n    ...mapState([\"isRTL\", \"color\"])\n  }\n};","map":{"version":3,"names":["mapState","name","props","collapseRef","type","String","required","navText","collapse","Boolean","default","data","isExpanded","methods","getRoute","routeArr","$route","path","split","computed"],"sources":["C:\\Gabriel\\Codes\\SGMW\\delivery_app_frontend\\frontend\\src\\examples\\Sidenav\\SidenavCollapse.vue"],"sourcesContent":["<template>\r\n  <router-link\r\n    :data-bs-toggle=\"collapse ? 'collapse' : ''\"\r\n    :to=\"collapse ? `#${collapseRef}` : collapseRef\"\r\n    :aria-controls=\"collapseRef\"\r\n    :aria-expanded=\"isExpanded\"\r\n    class=\"nav-link\"\r\n    :class=\"getRoute() === collapseRef ? `active bg-gradient-${color}` : ''\"\r\n    v-bind=\"$attrs\"\r\n    @click=\"isExpanded = !isExpanded\"\r\n  >\r\n    <div\r\n      class=\"text-center d-flex align-items-center justify-content-center\"\r\n      :class=\"isRTL ? ' ms-2' : 'me-2'\"\r\n    >\r\n      <slot name=\"icon\"></slot>\r\n    </div>\r\n    <span class=\"nav-link-text\" :class=\"isRTL ? ' me-1' : 'ms-1'\">{{\r\n      navText\r\n    }}</span>\r\n  </router-link>\r\n  <div :class=\"isExpanded ? 'collapse show' : 'collapse'\">\r\n    <slot name=\"list\"></slot>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"SidenavCollapse\",\r\n  props: {\r\n    collapseRef: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    navText: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    collapse: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isExpanded: false,\r\n    };\r\n  },\r\n  methods: {\r\n    getRoute() {\r\n      const routeArr = this.$route.path.split(\"/\");\r\n      return routeArr[1];\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapState([\"isRTL\", \"color\"]),\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n</style>\r\n"],"mappings":"AA0BA,SAASA,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDE,QAAQ,EAAE;MACRJ,IAAI,EAAEK,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;MAC5C,OAAOH,QAAQ,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EACDI,QAAQ,EAAE;IACR,GAAGnB,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}