{"ast":null,"code":"import ProfileService from \"@/services/profile.service\";\nconst initialState = {\n  userProfile: null\n};\nexport const profile = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    async getProfile({\n      commit\n    }) {\n      const userProfile = await ProfileService.getProfile();\n      commit('success', userProfile);\n    },\n    async editProfile({\n      commit\n    }, modifiedProfile) {\n      const userProfile = await ProfileService.editProfile(modifiedProfile);\n      commit('success', userProfile);\n    },\n    //eslint-disable-next-line no-unused-vars\n    async uploadPic({\n      commit\n    }, file) {\n      const picURL = (await ProfileService.uploadPic(file, this.state.profile.userProfile.id)).url;\n      commit('successUpload', picURL);\n    }\n  },\n  mutations: {\n    success(state, userProfile) {\n      state.userProfile = userProfile;\n    },\n    successUpload(state, picURL) {\n      state.userProfile.profile_image = picURL;\n    }\n  },\n  getters: {\n    getUserProfile(state) {\n      return state.userProfile;\n    },\n    getUserProfileImage(state) {\n      return state.userProfile.profile_image;\n    }\n  }\n};","map":{"version":3,"names":["ProfileService","initialState","userProfile","profile","namespaced","state","actions","getProfile","commit","editProfile","modifiedProfile","uploadPic","file","picURL","id","url","mutations","success","successUpload","profile_image","getters","getUserProfile","getUserProfileImage"],"sources":["C:/Gabriel/Codes/SGMW/delivery_app_frontend/frontend/src/store/profile.module.js"],"sourcesContent":["import ProfileService from \"@/services/profile.service\"\r\n\r\nconst initialState = { userProfile: null };\r\n\r\nexport const profile = {\r\n    namespaced: true,\r\n    state: initialState,\r\n    actions: {\r\n        async getProfile({ commit }) {\r\n            const userProfile = await ProfileService.getProfile();\r\n            commit('success', userProfile);\r\n        },\r\n\r\n        async editProfile({ commit }, modifiedProfile) {\r\n            const userProfile = await ProfileService.editProfile(modifiedProfile);\r\n            commit('success', userProfile);\r\n        },\r\n\r\n        //eslint-disable-next-line no-unused-vars\r\n        async uploadPic({ commit }, file) {\r\n           const picURL = (await ProfileService.uploadPic(file, this.state.profile.userProfile.id)).url;\r\n           commit('successUpload', picURL);\r\n        },\r\n\r\n        \r\n\r\n    },\r\n    mutations: {\r\n        success(state, userProfile) {\r\n            state.userProfile = userProfile;\r\n        },\r\n        successUpload(state, picURL){\r\n            state.userProfile.profile_image = picURL;\r\n        }\r\n    },\r\n    getters: {\r\n        getUserProfile(state){\r\n            return state.userProfile\r\n        },\r\n        getUserProfileImage(state){\r\n            return state.userProfile.profile_image\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,4BAA4B;AAEvD,MAAMC,YAAY,GAAG;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE1C,OAAO,MAAMC,OAAO,GAAG;EACnBC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAEJ,YAAY;EACnBK,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzB,MAAMN,WAAW,GAAG,MAAMF,cAAc,CAACO,UAAU,CAAC,CAAC;MACrDC,MAAM,CAAC,SAAS,EAAEN,WAAW,CAAC;IAClC,CAAC;IAED,MAAMO,WAAWA,CAAC;MAAED;IAAO,CAAC,EAAEE,eAAe,EAAE;MAC3C,MAAMR,WAAW,GAAG,MAAMF,cAAc,CAACS,WAAW,CAACC,eAAe,CAAC;MACrEF,MAAM,CAAC,SAAS,EAAEN,WAAW,CAAC;IAClC,CAAC;IAED;IACA,MAAMS,SAASA,CAAC;MAAEH;IAAO,CAAC,EAAEI,IAAI,EAAE;MAC/B,MAAMC,MAAM,GAAG,CAAC,MAAMb,cAAc,CAACW,SAAS,CAACC,IAAI,EAAE,IAAI,CAACP,KAAK,CAACF,OAAO,CAACD,WAAW,CAACY,EAAE,CAAC,EAAEC,GAAG;MAC5FP,MAAM,CAAC,eAAe,EAAEK,MAAM,CAAC;IAClC;EAIJ,CAAC;EACDG,SAAS,EAAE;IACPC,OAAOA,CAACZ,KAAK,EAAEH,WAAW,EAAE;MACxBG,KAAK,CAACH,WAAW,GAAGA,WAAW;IACnC,CAAC;IACDgB,aAAaA,CAACb,KAAK,EAAEQ,MAAM,EAAC;MACxBR,KAAK,CAACH,WAAW,CAACiB,aAAa,GAAGN,MAAM;IAC5C;EACJ,CAAC;EACDO,OAAO,EAAE;IACLC,cAAcA,CAAChB,KAAK,EAAC;MACjB,OAAOA,KAAK,CAACH,WAAW;IAC5B,CAAC;IACDoB,mBAAmBA,CAACjB,KAAK,EAAC;MACtB,OAAOA,KAAK,CAACH,WAAW,CAACiB,aAAa;IAC1C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}