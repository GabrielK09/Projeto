{"ast":null,"code":"import setMaterialInput from \"@/assets/js/material-input.js\";\nexport default {\n  name: \"MaterialInput\",\n  props: {\n    variant: {\n      type: String,\n      default: \"outline\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    size: {\n      type: String,\n      default: \"default\"\n    },\n    success: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    id: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String,\n      default: \"\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    isRequired: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"dark\"\n    }\n  },\n  emits: ['update:value'],\n  mounted() {\n    setMaterialInput();\n  },\n  methods: {\n    getClasses: size => {\n      let sizeValue;\n      sizeValue = size ? `form-control-${size}` : null;\n      return sizeValue;\n    },\n    getStatus: (error, success) => {\n      let isValidValue;\n      if (success) {\n        isValidValue = \"is-valid\";\n      } else if (error) {\n        isValidValue = \"is-invalid\";\n      } else {\n        isValidValue = null;\n      }\n      return isValidValue;\n    }\n  }\n};","map":{"version":3,"names":["setMaterialInput","name","props","variant","type","String","default","label","size","success","Boolean","error","disabled","id","required","value","placeholder","isRequired","color","emits","mounted","methods","getClasses","sizeValue","getStatus","isValidValue"],"sources":["C:\\Gabriel\\Codes\\SGMW\\resources\\delivery_app_frontend\\frontend\\src\\components\\MaterialInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"input-group\" :class=\"`input-group-${variant} ${getStatus(error, success)}`\">\r\n    <label :class=\"[\r\n      variant === 'static' ? '' : 'form-label',\r\n      color === 'dark' ? 'text-black' : 'text-white'\r\n    ]\">{{ label }}</label>\r\n    <input :id=\"id\" :type=\"type\" class=\"form-control\" :class=\"getClasses(size)\" :name=\"name\" :value=\"value\"\r\n      :placeholder=\"placeholder\" :isRequired=\"isRequired\" :disabled=\"disabled\"\r\n      @input=\"(e) => this.$emit('update:value', e.target.value)\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport setMaterialInput from \"@/assets/js/material-input.js\";\r\n\r\nexport default {\r\n  name: \"MaterialInput\",\r\n  props: {\r\n    variant: {\r\n      type: String,\r\n      default: \"outline\",\r\n    },\r\n    label: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: \"default\",\r\n    },\r\n    success: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    error: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    name: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    id: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"text\",\r\n    },\r\n    isRequired: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: \"dark\"\r\n    }\r\n  },\r\n\r\n  emits: ['update:value'],\r\n  mounted() {\r\n    setMaterialInput();\r\n  },\r\n  methods: {\r\n    getClasses: (size) => {\r\n      let sizeValue;\r\n\r\n      sizeValue = size ? `form-control-${size}` : null;\r\n\r\n      return sizeValue;\r\n    },\r\n    getStatus: (error, success) => {\r\n      let isValidValue;\r\n\r\n      if (success) {\r\n        isValidValue = \"is-valid\";\r\n      } else if (error) {\r\n        isValidValue = \"is-invalid\";\r\n      } else {\r\n        isValidValue = null;\r\n      }\r\n\r\n      return isValidValue;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAaA,OAAOA,gBAAe,MAAO,+BAA+B;AAE5D,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,IAAI,EAAE;MACJJ,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDG,OAAO,EAAE;MACPL,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX,CAAC;IACDK,KAAK,EAAE;MACLP,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX,CAAC;IACDM,QAAQ,EAAE;MACRR,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX,CAAC;IACDL,IAAI,EAAE;MACJG,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDO,EAAE,EAAE;MACFT,IAAI,EAAEC,MAAM;MACZS,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLX,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDU,WAAW,EAAE;MACXZ,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDF,IAAI,EAAE;MACJA,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDW,UAAU,EAAE;MACVb,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX,CAAC;IACDY,KAAK,EAAE;MACLd,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EAEDa,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,OAAOA,CAAA,EAAG;IACRpB,gBAAgB,CAAC,CAAC;EACpB,CAAC;EACDqB,OAAO,EAAE;IACPC,UAAU,EAAGd,IAAI,IAAK;MACpB,IAAIe,SAAS;MAEbA,SAAQ,GAAIf,IAAG,GAAI,gBAAgBA,IAAI,EAAC,GAAI,IAAI;MAEhD,OAAOe,SAAS;IAClB,CAAC;IACDC,SAAS,EAAEA,CAACb,KAAK,EAAEF,OAAO,KAAK;MAC7B,IAAIgB,YAAY;MAEhB,IAAIhB,OAAO,EAAE;QACXgB,YAAW,GAAI,UAAU;MAC3B,OAAO,IAAId,KAAK,EAAE;QAChBc,YAAW,GAAI,YAAY;MAC7B,OAAO;QACLA,YAAW,GAAI,IAAI;MACrB;MAEA,OAAOA,YAAY;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}