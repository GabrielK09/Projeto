{"ast":null,"code":"import AuthService from '../services/auth.service';\nconst user = JSON.parse(localStorage.getItem('user_free'));\nconst initialState = user ? {\n  loggedIn: true\n} : {\n  loggedIn: false\n};\nexport const auth = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    async login({\n      commit\n    }, user) {\n      try {\n        await AuthService.login(user);\n        commit('isLoggedIn', true);\n      } catch (error) {\n        commit('isLoggedIn', false);\n        throw error;\n      }\n    },\n    async logout({\n      commit\n    }) {\n      try {\n        await AuthService.logout();\n        commit('isLoggedIn', false);\n      } catch (error) {\n        commit('isLoggedIn', true);\n      }\n    },\n    async register({\n      commit\n    }, user) {\n      try {\n        await AuthService.register(user);\n        commit('isLoggedIn', true);\n      } catch (error) {\n        commit('isLoggedIn', false);\n        throw error;\n      }\n    },\n    // eslint-disable-next-line no-unused-vars\n    async passwordForgot({\n      commit\n    }, userEmail) {\n      await AuthService.passwordForgot(userEmail);\n    },\n    // eslint-disable-next-line no-unused-vars\n    async passwordReset({\n      commit\n    }, passwordDTO) {\n      await AuthService.passwordReset(passwordDTO);\n    }\n  },\n  mutations: {\n    isLoggedIn(state, loggedIn) {\n      state.loggedIn = loggedIn;\n    }\n  },\n  getters: {\n    isLoggedIn(state) {\n      return state.loggedIn;\n    }\n  }\n};","map":{"version":3,"names":["AuthService","user","JSON","parse","localStorage","getItem","initialState","loggedIn","auth","namespaced","state","actions","login","commit","error","logout","register","passwordForgot","userEmail","passwordReset","passwordDTO","mutations","isLoggedIn","getters"],"sources":["C:/Gabriel/Codes/SGMW/delivery_app_frontend/frontend/src/store/auth.module.js"],"sourcesContent":["import AuthService from '../services/auth.service';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user_free'));\r\nconst initialState = user ? { loggedIn: true } : { loggedIn: false };\r\n\r\nexport const auth = {\r\n  namespaced: true,\r\n  state: initialState,\r\n  actions: {\r\n    async login({ commit }, user) {\r\n      try {\r\n        await AuthService.login(user);\r\n        commit('isLoggedIn', true);\r\n      } catch (error) {\r\n        commit('isLoggedIn', false);\r\n        throw(error)\r\n      }\r\n    },\r\n    async logout({ commit }) {\r\n      try {\r\n        await AuthService.logout();\r\n        commit('isLoggedIn', false);\r\n      }catch(error){\r\n        commit('isLoggedIn', true);\r\n      }\r\n    },\r\n    async register({ commit }, user) {\r\n      try {\r\n        await AuthService.register(user);\r\n        commit('isLoggedIn', true);\r\n      } catch (error) {\r\n        commit('isLoggedIn', false);\r\n        throw(error)\r\n      }\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    async passwordForgot({commit}, userEmail){\r\n      await AuthService.passwordForgot(userEmail);\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    async passwordReset({commit}, passwordDTO){\r\n      await AuthService.passwordReset(passwordDTO);\r\n    },\r\n  },\r\n  mutations: {\r\n    isLoggedIn(state, loggedIn) {\r\n      state.loggedIn = loggedIn\r\n    }\r\n  },\r\n  getters: {\r\n    isLoggedIn(state){\r\n      return state.loggedIn;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAElD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC1D,MAAMC,YAAY,GAAGL,IAAI,GAAG;EAAEM,QAAQ,EAAE;AAAK,CAAC,GAAG;EAAEA,QAAQ,EAAE;AAAM,CAAC;AAEpE,OAAO,MAAMC,IAAI,GAAG;EAClBC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAEJ,YAAY;EACnBK,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEZ,IAAI,EAAE;MAC5B,IAAI;QACF,MAAMD,WAAW,CAACY,KAAK,CAACX,IAAI,CAAC;QAC7BY,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdD,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;QAC3B,MAAMC,KAAK;MACb;IACF,CAAC;IACD,MAAMC,MAAMA,CAAC;MAAEF;IAAO,CAAC,EAAE;MACvB,IAAI;QACF,MAAMb,WAAW,CAACe,MAAM,CAAC,CAAC;QAC1BF,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;MAC7B,CAAC,QAAMC,KAAK,EAAC;QACXD,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC5B;IACF,CAAC;IACD,MAAMG,QAAQA,CAAC;MAAEH;IAAO,CAAC,EAAEZ,IAAI,EAAE;MAC/B,IAAI;QACF,MAAMD,WAAW,CAACgB,QAAQ,CAACf,IAAI,CAAC;QAChCY,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdD,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;QAC3B,MAAMC,KAAK;MACb;IACF,CAAC;IACD;IACA,MAAMG,cAAcA,CAAC;MAACJ;IAAM,CAAC,EAAEK,SAAS,EAAC;MACvC,MAAMlB,WAAW,CAACiB,cAAc,CAACC,SAAS,CAAC;IAC7C,CAAC;IACD;IACA,MAAMC,aAAaA,CAAC;MAACN;IAAM,CAAC,EAAEO,WAAW,EAAC;MACxC,MAAMpB,WAAW,CAACmB,aAAa,CAACC,WAAW,CAAC;IAC9C;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,UAAUA,CAACZ,KAAK,EAAEH,QAAQ,EAAE;MAC1BG,KAAK,CAACH,QAAQ,GAAGA,QAAQ;IAC3B;EACF,CAAC;EACDgB,OAAO,EAAE;IACPD,UAAUA,CAACZ,KAAK,EAAC;MACf,OAAOA,KAAK,CAACH,QAAQ;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}