{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart\"\n};\nconst _hoisted_2 = [\"id\", \"height\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", {\n    id: $props.id,\n    class: \"chart-canvas\",\n    height: $props.height\n  }, null, 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","id","$props","height","_hoisted_2"],"sources":["C:\\Gabriel\\Codes\\SGMW\\resources\\delivery_app_frontend\\frontend\\src\\examples\\Charts\\ReportsLineChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart\">\r\n    <canvas :id=\"id\" class=\"chart-canvas\" :height=\"height\"></canvas>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  name: \"ReportsLineChart\",\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      default: \"line-chart\",\r\n    },\r\n    height: {\r\n      type: [Number, String],\r\n      default: \"170\",\r\n    },\r\n    chart: {\r\n      type: Object,\r\n      required: true,\r\n      labels: Array,\r\n      datasets: {\r\n        type: Object,\r\n        label: String,\r\n        data: Array,\r\n      },\r\n    },\r\n  },\r\n  mounted() {\r\n    var ctx = document.getElementById(this.id).getContext(\"2d\");\r\n\r\n    let chartStatus = Chart.getChart(this.id);\r\n    if (chartStatus != undefined) {\r\n      chartStatus.destroy();\r\n    }\r\n\r\n    new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: this.chart.labels,\r\n        datasets: [\r\n          {\r\n            label: this.chart.datasets.label,\r\n            tension: 0,\r\n            borderWidth: 0,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"rgba(255, 255, 255, .8)\",\r\n            pointBorderColor: \"transparent\",\r\n            borderColor: \"rgba(255, 255, 255, .8)\",\r\n            // eslint-disable-next-line no-dupe-keys\r\n            borderColor: \"rgba(255, 255, 255, .8)\",\r\n            // eslint-disable-next-line no-dupe-keys\r\n            borderWidth: 4,\r\n            backgroundColor: \"transparent\",\r\n            fill: true,\r\n            data: this.chart.datasets.data,\r\n            maxBarThickness: 6,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n        },\r\n        interaction: {\r\n          intersect: false,\r\n          mode: \"index\",\r\n        },\r\n        scales: {\r\n          y: {\r\n            grid: {\r\n              drawBorder: false,\r\n              display: true,\r\n              drawOnChartArea: true,\r\n              drawTicks: false,\r\n              borderDash: [5, 5],\r\n              color: \"rgba(255, 255, 255, .2)\",\r\n            },\r\n            ticks: {\r\n              display: true,\r\n              color: \"#f8f9fa\",\r\n              padding: 10,\r\n              font: {\r\n                size: 14,\r\n                weight: 300,\r\n                family: \"Roboto\",\r\n                style: \"normal\",\r\n                lineHeight: 2,\r\n              },\r\n            },\r\n          },\r\n          x: {\r\n            grid: {\r\n              drawBorder: false,\r\n              display: false,\r\n              drawOnChartArea: false,\r\n              drawTicks: false,\r\n              borderDash: [5, 5],\r\n            },\r\n            ticks: {\r\n              display: true,\r\n              color: \"#f8f9fa\",\r\n              padding: 10,\r\n              font: {\r\n                size: 14,\r\n                weight: 300,\r\n                family: \"Roboto\",\r\n                style: \"normal\",\r\n                lineHeight: 2,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;mBADpB;;uBACEC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAAgE;IAAvDC,EAAE,EAAEC,MAAA,CAAAD,EAAE;IAAEJ,KAAK,EAAC,cAAc;IAAEM,MAAM,EAAED,MAAA,CAAAC;0BAFnDC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}