{"ast":null,"code":"import axios from 'axios';\nimport Jsona from 'jsona';\nimport authHeader from './auth-header';\nconst API_URL = process.env.VUE_APP_API_BASE_URL;\nconst dataFormatter = new Jsona();\nexport default {\n  async getProfile() {\n    try {\n      const response = await axios.get(API_URL + \"/me\", {\n        headers: authHeader()\n      });\n      return dataFormatter.deserialize(response.data);\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      // Retorne uma mensagem de erro ou um objeto vazio\n      return {\n        error: 'Não foi possível obter o perfil.'\n      };\n    }\n  },\n  async editProfile(profile) {\n    try {\n      profile.type = 'profile';\n      const newJson = dataFormatter.serialize({\n        stuff: profile\n      });\n      const response = await axios.patch(API_URL + \"/me\", newJson, {\n        headers: authHeader()\n      });\n      return dataFormatter.deserialize(response.data);\n    } catch (error) {\n      console.error('Error editing profile:', error);\n      return {\n        error: 'Não foi possível editar o perfil.'\n      };\n    }\n  },\n  async uploadPic(pic, userId) {\n    try {\n      const postUrl = API_URL + \"/uploads/users/\" + userId + \"/profile-image\";\n      const response = await axios.post(postUrl, {\n        attachment: pic\n      }, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error uploading picture:', error);\n      return {\n        error: 'Não foi possível fazer o upload da imagem.'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","Jsona","authHeader","API_URL","process","env","VUE_APP_API_BASE_URL","dataFormatter","getProfile","response","get","headers","deserialize","data","error","console","editProfile","profile","type","newJson","serialize","stuff","patch","uploadPic","pic","userId","postUrl","post","attachment"],"sources":["C:/Gabriel/Codes/SGMW/delivery_app_frontend/frontend/src/services/profile.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport Jsona from 'jsona';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = process.env.VUE_APP_API_BASE_URL;\r\nconst dataFormatter = new Jsona();\r\n\r\nexport default {\r\n  async getProfile() {\r\n    try {\r\n      const response = await axios.get(API_URL + \"/me\", { headers: authHeader() });\r\n      return dataFormatter.deserialize(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching profile:', error);\r\n      // Retorne uma mensagem de erro ou um objeto vazio\r\n      return { error: 'Não foi possível obter o perfil.' };\r\n    }\r\n  },\r\n\r\n  async editProfile(profile) {\r\n    try {\r\n      profile.type = 'profile';\r\n      const newJson = dataFormatter.serialize({ stuff: profile });\r\n      const response = await axios.patch(API_URL + \"/me\", newJson, { headers: authHeader() });\r\n      return dataFormatter.deserialize(response.data);\r\n    } catch (error) {\r\n      console.error('Error editing profile:', error);\r\n      return { error: 'Não foi possível editar o perfil.' };\r\n    }\r\n  },\r\n\r\n  async uploadPic(pic, userId) {\r\n    try {\r\n      const postUrl = API_URL + \"/uploads/users/\" + userId + \"/profile-image\";\r\n      const response = await axios.post(postUrl, { attachment: pic }, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error uploading picture:', error);\r\n      return { error: 'Não foi possível fazer o upload da imagem.' };\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAChD,MAAMC,aAAa,GAAG,IAAIN,KAAK,CAAC,CAAC;AAEjC,eAAe;EACb,MAAMO,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACP,OAAO,GAAG,KAAK,EAAE;QAAEQ,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;MAC5E,OAAOK,aAAa,CAACK,WAAW,CAACH,QAAQ,CAACI,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;MACA,OAAO;QAAEA,KAAK,EAAE;MAAmC,CAAC;IACtD;EACF,CAAC;EAED,MAAME,WAAWA,CAACC,OAAO,EAAE;IACzB,IAAI;MACFA,OAAO,CAACC,IAAI,GAAG,SAAS;MACxB,MAAMC,OAAO,GAAGZ,aAAa,CAACa,SAAS,CAAC;QAAEC,KAAK,EAAEJ;MAAQ,CAAC,CAAC;MAC3D,MAAMR,QAAQ,GAAG,MAAMT,KAAK,CAACsB,KAAK,CAACnB,OAAO,GAAG,KAAK,EAAEgB,OAAO,EAAE;QAAER,OAAO,EAAET,UAAU,CAAC;MAAE,CAAC,CAAC;MACvF,OAAOK,aAAa,CAACK,WAAW,CAACH,QAAQ,CAACI,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAEA,KAAK,EAAE;MAAoC,CAAC;IACvD;EACF,CAAC;EAED,MAAMS,SAASA,CAACC,GAAG,EAAEC,MAAM,EAAE;IAC3B,IAAI;MACF,MAAMC,OAAO,GAAGvB,OAAO,GAAG,iBAAiB,GAAGsB,MAAM,GAAG,gBAAgB;MACvE,MAAMhB,QAAQ,GAAG,MAAMT,KAAK,CAAC2B,IAAI,CAACD,OAAO,EAAE;QAAEE,UAAU,EAAEJ;MAAI,CAAC,EAAE;QAAEb,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MAAE,CAAC,CAAC;MACvH,OAAOF,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO;QAAEA,KAAK,EAAE;MAA6C,CAAC;IAChE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}